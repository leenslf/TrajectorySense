<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- Velodyne LiDAR for iG-LIO compatibility -->
    <joint name="velodyne_joint" type="fixed">
        <parent link="base_link"/>
        <child link="velodyne"/>
        <origin xyz="0.2 0 0.6" rpy="0 0 0"/>
    </joint>

    <link name="velodyne">
        <visual>
            <geometry>
                <cylinder radius="0.052" length="0.072"/>
            </geometry>
            <material name="velodyne_material">
                <color rgba="1.0 0.0 0.0 1.0"/>  <!-- Red for visibility -->
            </material>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.052" length="0.072"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.83"/>
            <origin xyz="0 0 0"/>
            <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
        </inertial>
    </link>

    <!-- Fixed frame_name to match TF tree -->
    <gazebo reference="velodyne">
        <sensor type="ray" name="velodyne_sensor">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <resolution>1</resolution>
                        <min_angle>-3.141592654</min_angle>
                        <max_angle>3.141592654</max_angle>
                    </horizontal>
                    <vertical>
                        <samples>16</samples>
                        <resolution>1</resolution>
                        <min_angle>-0.26</min_angle>
                        <max_angle>0.26</max_angle>
                    </vertical>
                </scan>
                <range>
                    <min>0.1</min>
                    <max>150.0</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.02</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_ray_sensor" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <namespace></namespace>
                    <remapping>~/out:=points_raw</remapping>
                </ros>
                <output_type>sensor_msgs/PointCloud2</output_type>
                <frame_name>velodyne</frame_name>  <!-- Fixed: Use velodyne instead of base_footprint -->
            </plugin>
        </sensor>
        <material>Gazebo/Red</material>
    </gazebo>

</robot>